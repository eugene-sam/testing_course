...JSON
 4. Создать внешний репозиторий c названием JSON.  ===> push button "New" in section "Repositories" on Github account main 
page
 5. Клонировать репозиторий JSON на локальный компьютер. ===>	git clone 'link from Github'
 6. Внутри локального JSON создать файл “new.json”.	 ===>	touch new.json
 7. Добавить файл под гит.				 ===>	git add new.json
 8. Закоммитить файл.					 ===>	git commit -m "create new.json"
 9. Отправить файл на внешний GitHub репозиторий.	 ===>	git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
будущая желаемая зарплата). Всё написать в формате JSON. ===>	nano new.json
 11. Отправить изменения на внешний репозиторий.	 ===>	git commit -a -m "modify new.json"
 12. Создать файл preferences.json 			 ===>	touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях
 (Любимый фильм, любимый сериал, любимая еда, любимое время года, страна которую хотели бы посетить) в формате JSON.
===> vim preferences.json 
 14. Создать файл skills.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON ===> touch skills.json
 15. Отправить сразу 2 файла на внешний репозиторий. ===> git add. git commit -m "add preferencese.json and skills.json" 
git push origin main
 16. На веб интерфейсе создать файл bug_report.json. ===> add file -> create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit new file  
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. ===> edit file -> commit changes
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit chages
 20. Синхронизировать внешний и локальный репозиторий JSON ===> git pull origin main


XML
 21. Создать внешний репозиторий c названием XML. ===> repositories -> new -> create
 22. Клонировать репозиторий XML на локальный компьютер. ===> git clone 'link'
 23. Внутри локального XML создать файл “new.xml”. ===> nano new.xml
 24. Добавить файл под гит. ===> git add new.xml
 25. Закоммитить файл. ===> git commit -m "create new.xml"
 26. Отправить файл на внешний GitHub репозиторий. ===> git push new.xml 
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
будущая желаемая зарплата). Всё написать в формате XML. ===> 
 28. Отправить изменения на внешний репозиторий. ===> git commit -a -m "modify new.xml” 
 29. Создать файл preferences.xml ===> touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое 
время года, сторона которую хотели бы посетить) в формате XML. ===> nano preferences.xml
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML  ===> touch skills.xml
 32. Сделать коммит в одну строку. ===> git add skills.xml && git commit -m "create skills.xml
 33. Отправить сразу 2 файла на внешний репозиторий. ===> git push .
 34. На веб интерфейсе создать файл bug_report.xml. ===> add file -> create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. ===> edit file -> commit changes
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit changes
 38. Синхронизировать внешний и локальный репозиторий XML ===> git pull origin main

TXT
 1. Создать внешний репозиторий c названием TXT. ===> repositories -> new
 2. Клонировать репозиторий TXT на локальный компьютер. ===> git clone TXT
 3. Внутри локального TXT создать файл “new.txt”. ===> touch new.txt
 4. Добавить файл под гит. ===> git add new.txt
 5. Закоммитить файл. ===> git commit -m "create new.txt"
 6. Отправить файл на внешний GitHub репозиторий. ===> git push 
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, 
будущая желаемая зарплата). Всё написать в формате TXT. ===> nano new.txt
 8. Отправить изменения на внешний репозиторий. ===> git commit -am "modify new.txt"
 9. Создать файл preferences.txt ===> touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, 
любимое время года, сторона которую хотели бы посетить) в формате TXT. ===> open preferences.txt
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT ===> cat>skills.txt
 12. Сделать коммит в одну строку. ===> git add .|git commit -m "create preferences.txt and skills.txt"
 13. Отправить сразу 2 файла на внешний репозиторий. ===> git push
 14. На веб интерфейсе создать файл bug_report.txt. ===> add file -> create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. ===> edit file -> commit changes
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. ===> commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT ===> git pull origin main